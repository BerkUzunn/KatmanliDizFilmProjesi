// <auto-generated />
using System;
using KatmanlıData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KatmanlıData.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221209094419_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KatmanlıModel.Model.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("KatmanlıModel.Model.DiziIzlemeListesi", b =>
                {
                    b.Property<int>("ListeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiziAdı")
                        .HasColumnType("int");

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int?>("DizilerDiziId")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.HasKey("ListeNo");

                    b.HasIndex("DizilerDiziId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("DiziIzlemeListesi");
                });

            modelBuilder.Entity("KatmanlıModel.Model.DiziYorumlar", b =>
                {
                    b.Property<int>("ListeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiziId")
                        .HasColumnType("int");

                    b.Property<int>("DiziPuan")
                        .HasColumnType("int");

                    b.Property<int?>("DizilerDiziId")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<string>("Yorumlar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ListeNo");

                    b.HasIndex("DizilerDiziId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("DiziYorumlar");
                });

            modelBuilder.Entity("KatmanlıModel.Model.Diziler", b =>
                {
                    b.Property<int>("DiziId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiziAcıklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiziAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiziPuan")
                        .HasColumnType("int");

                    b.Property<string>("DiziTür")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiziYayıncı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiziYönetmen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiziYıl")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiziId");

                    b.ToTable("Diziler");
                });

            modelBuilder.Entity("KatmanlıModel.Model.FilmIzlemeListesi", b =>
                {
                    b.Property<int>("ListeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilmAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int?>("FilmlerFilmId")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.HasKey("ListeNo");

                    b.HasIndex("FilmlerFilmId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("FilmIzlemeListesi");
                });

            modelBuilder.Entity("KatmanlıModel.Model.FilmYorumlar", b =>
                {
                    b.Property<int>("ListeNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("FilmPuan")
                        .HasColumnType("int");

                    b.Property<int?>("FilmlerFilmId")
                        .HasColumnType("int");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("int");

                    b.Property<string>("Yorumlar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ListeNo");

                    b.HasIndex("FilmlerFilmId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("FilmYorumlar");
                });

            modelBuilder.Entity("KatmanlıModel.Model.Filmler", b =>
                {
                    b.Property<int>("FilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilmAcıklma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmPuan")
                        .HasColumnType("int");

                    b.Property<string>("FilmTür")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilmYönetmen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmYıl")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yayıncı")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FilmId");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("KatmanlıModel.Model.Kullanıcı", b =>
                {
                    b.Property<int>("KullanıcıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KullanıcıAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullanıcıUlke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("KullanıcıId");

                    b.ToTable("Kullanıcı");
                });

            modelBuilder.Entity("KatmanlıModel.Model.DiziIzlemeListesi", b =>
                {
                    b.HasOne("KatmanlıModel.Model.Diziler", "Diziler")
                        .WithMany()
                        .HasForeignKey("DizilerDiziId");

                    b.HasOne("KatmanlıModel.Model.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KatmanlıModel.Model.DiziYorumlar", b =>
                {
                    b.HasOne("KatmanlıModel.Model.Diziler", "Diziler")
                        .WithMany()
                        .HasForeignKey("DizilerDiziId");

                    b.HasOne("KatmanlıModel.Model.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KatmanlıModel.Model.FilmIzlemeListesi", b =>
                {
                    b.HasOne("KatmanlıModel.Model.Filmler", "Filmler")
                        .WithMany()
                        .HasForeignKey("FilmlerFilmId");

                    b.HasOne("KatmanlıModel.Model.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KatmanlıModel.Model.FilmYorumlar", b =>
                {
                    b.HasOne("KatmanlıModel.Model.Filmler", "Filmler")
                        .WithMany()
                        .HasForeignKey("FilmlerFilmId");

                    b.HasOne("KatmanlıModel.Model.Kullanıcı", "Kullanıcı")
                        .WithMany()
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
